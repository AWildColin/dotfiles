###
 # Custom tmux configuration cobbled together from google and trial & error
 # by Eric Marden (xentek.net), heavily modified by David Rogers (@al-the-x),
 # fine-tined to mimic personal screen configuration by Chris Olin (@BinaryMn).
##

unbind C-b # unbind default prefix
set -g prefix F1 # use F1  key as prefix
bind-key F1 send-prefix # send prefix for nested tmux by pressing F1 twice

# bound to C-a by default
bind-key C-w last-window; bind-key w last-window

# to be more screen-friendly...
bind-key C-c new-window; bind-key c new-window

# utf8
set-window-option -g utf8 on

# statusbar background to black, foreground to white
set-option -g status-fg colour231
set-option -g status-bg black

# use the following to get a list of supported colors
#
# for i in {0..255} ; do
#    printf "\x1b[38;5;${i}mcolour${i}\n"
#    done
#
# then use colourxxx to use specific color

# make window list look like screen configuration
set-window-option -g window-status-current-format "#[bg=colour10,fg=colour9,bold](#[fg=colour69,bold]#I#F$ #W#[fg=colour9,bold])"
set-window-option -g window-status-format "#[fg=colour231]#I#F$ #W"

# update the statusbar every second (for clock)

set-option -g status-interval 1

# hostname is printed on the left, uptime and current load on the right
set-option -g status-left-length 30
set-option -g status-right-length 100
set-option -g status-left '#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,} #[fg=colour9] [ #[fg=colour10] #H #[fg=colour9] ]'
set-option -g status-right "#[fg=colour15]#(uptime | rev | cut -d":" -f1 | rev | sed s/,//g )   |   #(~/bin/get_freemem)MB    #[fg=colour11]%I:%M:%S%P ET #[fg=colour69]%m.%d.%y" # time/date variables came from http://linux.die.net/man/3/strftime

# allow switching the currently focused pane by mouse click
# enabling this requires user to hold down SHIFT key to select text
setw -g mode-mouse on
set-option -g mouse-select-pane on

# send tmux clipboard to system clipboard
#bind > run-shell "tmux show-buffer > /dev/clipboard" \; display-message "Copied tmux buffer to system clipboard"
#bind > run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"
bind > run "tmux save-buffer - | xclip -i -selection clipboard,primary" \; display-message "Copied tmux buffer to system clipboard"

# set the title of current window to something descriptive
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name, active(or not)

# if bell rings, trigger a visual bell in current window
set-option -g bell-action any
set-option -g visual-bell on

# unless I'm coding, I don't want zero-based indexing
set -g base-index 1
set -g pane-base-index 1

# resize smaller windows for bigger displays
setw -g aggressive-resize on

# confirm before killing a window or the server

bind-key k confirm kill-window
bind-key K confirm kill-server

# scrollback buffer
set -g history-limit 99999

# make the key bindings work like VIM
set-option -g status-keys vi
set-window-option -g mode-keys vi

# fix the titles
set -g set-titles on
set -g set-titles-string "#I:#W"

# be notified when there is activity in one of your windows
set-window-option -g monitor-activity on

# don't rename windows automatically
set-window-option -g automatic-rename off

# reload changes in tmux, handy
bind-key r source-file ~/.tmux.conf

# make the split panes more mnemonic. split windows can be switched
# by using ctrl-arrow key direction
unbind-key '"'; unbind-key %
bind-key | split-window -h
bind-key _ split-window -v
